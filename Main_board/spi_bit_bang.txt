void Soft_SPI_init();
void Soft_SPI_chip_enable();
void Soft_SPI_chip_disable();
void Soft_SPI_scl_High();
void Soft_SPI_scl_Low();
void Soft_SPI_MOSI_High();
void Soft_SPI_MOSI_Low();
uint8_t Soft_SPI_transmit(uint8_t data_in);



//make sure pins are output or input
void Soft_SPI_init()
{

	
	
	//PA0 -> SS
	//PA1 -> MOSI
	//PA2 -> MISO IN
	//PA3 -> SCK
	
	//	OUT/IN		 76543210
	PORTA.DIRSET = 0b00001011;
	PORTA.DIRCLR = 0b00000100;
}


//-------------- CHIPSelect ---------//
//PA0 -> SS		

void Soft_SPI_chip_enable()
{
		//PA0 -> SS
		//PA1 -> MOSI
		//PA2 -> MISO IN
		//PA3 -> SCK
	
	
	//	OUT/IN		 76543210
	PORTA.OUTCLR = 0b00000001;
}

void Soft_SPI_chip_disable()
{
	//	OUT/IN		 76543210
	PORTA.OUTSET = 0b00000001;
}
///////////////////////////////////////


//-------------- SCKL ---------------//
//PA1 -> SCK	

void Soft_SPI_scl_High()
{
	
		//PA0 -> SS
		//PA1 -> MOSI
		//PA2 -> MISO IN
		//PA3 -> SCK
	
	//	OUT/IN		 76543210
	PORTA.OUTSET = 0b00001000;
}

void Soft_SPI_scl_Low()
{
		//PA0 -> SS
		//PA1 -> MOSI
		//PA2 -> MISO IN
		//PA3 -> SCK
	
	//	OUT/IN		 76543210
	PORTA.OUTCLR = 0b00001000;
}
///////////////////////////////////////


//-------------MOSI ------------------//
//PA2 -> MOSI	

void Soft_SPI_MOSI_High()
{
		//PA0 -> SS
		//PA1 -> MOSI
		//PA2 -> MISO IN
		//PA3 -> SCK
	
	//	OUT/IN		 76543210
	PORTA.OUTSET = 0b00000010;
}

void Soft_SPI_MOSI_Low()
{
	//	OUT/IN		 76543210
	PORTA.OUTCLR = 0b00000010;
}
///////////////////////////////////////


//--------------TRANSMIT-----------------------//
uint8_t Soft_SPI_transmit(uint8_t data_in)
{
	
	uint8_t bitpos;
	uint8_t bitvalue;
	uint8_t data_out=0;
	

//unsigned char   Transmitt_Receive_Master(unsigned char  data)
//{
	unsigned char i;
	unsigned char ReceivedValue=0;
	
	//
	//for (i=0;i<8;i++)
//
	//{
		//
		//if (data_in & _BV(i))
		//{
			//Soft_SPI_MOSI_High();
			//
		//}
		//else
		//{
			//Soft_SPI_MOSI_Low();
		//}
		//
		//data_in <<= 1;
		//// set clock high
		//wait_SPI();
		//
		//Soft_SPI_scl_High();
		//
		//ReceivedValue <<= 1; //shift left one bit
		//
		//if (PORTA.IN & PIN2_bm )
		//{
			//ReceivedValue |= _BV(i);
		//}
		//else
		//{
			//ReceivedValue &= ~_BV(i);
		//}
		//wait_SPI();
		//Soft_SPI_scl_Low();
		//wait_SPI();
	//}
//
	//return   ReceivedValue;
//}
	

	for (bitpos=8;bitpos>0;--bitpos) 
	{
		//write
		bitvalue = ((data_in >> (bitpos-1)) & 0x01);
			
			if (bitvalue) 
			{
				Soft_SPI_MOSI_High();
			} 
			else 
			{
				Soft_SPI_MOSI_Low();
			}
			wait_SPI();
			
			                                    // Rotate the data
			
			Soft_SPI_scl_High();
			wait_SPI();
			
			//Read
			//((data_out << (bitpos-1)) & 0x01) <= (PORTA.IN & PIN2_bm) ;
			
		       	data_out <<=bitpos;                       
			data_out += (PORTA.IN & PIN2_bm);                                // Read the data bit
		 
			Soft_SPI_scl_Low();
			
			wait_SPI();
		
			
	}
	
	return data_out;

}
////////////////////////////////////////////////////////
